name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-build:
    name: Frontend Build / Format & Build Frontend
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint code
      run: npm run lint
      
    - name: Check formatting
      run: npm run format:check
      
    - name: Type check
      run: npm run type-check
      
    - name: Build frontend
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: build/
        retention-days: 7

  frontend-tests:
    name: Frontend Build / Frontend Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: frontend-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  python-format:
    name: Python CI / Format Backend (3.12.x)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install --group dev -e .
        
    - name: Format check with black
      run: black --check --diff backend/
      
    - name: Import sorting check with isort
      run: isort --check-only --diff backend/
      
    - name: Lint with ruff
      run: ruff check backend/
      
    - name: Type check with mypy
      run: mypy backend/ --ignore-missing-imports
      
    - name: Spell check with codespell
      run: codespell backend/ --skip="*.pyc,*.pyo"

  python-tests:
    name: Python CI / Backend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: python-format
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install --group dev -e .
        
    - name: Run tests
      run: |
        cd backend
        pytest --cov=open_webui --cov-report=xml --cov-report=html -v
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  docker-build:
    name: Docker Build / Build Images
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [frontend-build, python-format]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build frontend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.frontend
        push: false
        tags: vibecaas-ui-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.backend
        push: false
        tags: vibecaas-ui-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Build combined image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.combined
        push: false
        tags: vibecaas-ui:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [frontend-build, python-format]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'