# syntax=docker/dockerfile:1
# VibeCaaS UI Frontend - Production-Ready Docker Image
# Optimized for performance and security

ARG NODE_VERSION=22
ARG NGINX_VERSION=1.25
ARG UID=1001
ARG GID=1001
ARG USERNAME=vibecaas

######## Build Stage ########
FROM node:${NODE_VERSION}-alpine3.20 AS build

# Create non-root user for build
RUN addgroup -g 1001 -S nodejs && \
    adduser -S vibecaas -u 1001 -G nodejs

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy package files
COPY --chown=vibecaas:nodejs package.json package-lock.json ./

# Install dependencies
RUN npm ci --only=production --no-audit --no-fund

# Copy source code
COPY --chown=vibecaas:nodejs . .

# Set build environment
ENV NODE_ENV=production
ENV APP_BUILD_HASH=${BUILD_HASH:-dev-build}

# Build the application
USER vibecaas
RUN npm run build

######## Production Stage ########
FROM nginx:${NGINX_VERSION}-alpine AS production

ARG UID
ARG GID
ARG USERNAME

# Install dumb-init and wget for proper signal handling and health checks
RUN apk add --no-cache dumb-init wget

# Create non-root user
RUN addgroup -g ${GID} -S ${USERNAME} && \
    adduser -S ${USERNAME} -u ${UID} -G ${USERNAME}

# Copy built frontend
COPY --from=build --chown=${USERNAME}:${USERNAME} /app/build /usr/share/nginx/html

# Copy nginx configuration
COPY --chown=${USERNAME}:${USERNAME} docker/nginx.conf /etc/nginx/nginx.conf

# Create necessary directories and set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx /var/run && \
    chown -R ${USERNAME}:${USERNAME} /var/cache/nginx /var/log/nginx /var/run /usr/share/nginx/html

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Use dumb-init and non-root user
USER ${USERNAME}
ENTRYPOINT ["dumb-init", "--"]
CMD ["nginx", "-g", "daemon off;"]